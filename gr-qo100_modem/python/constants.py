#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Copyright 2021 Daniel Estevez <daniel@destevez.net>
#
# This file is part of qo100_modem
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

from gnuradio import digital
import numpy as np

# 31-bit PRBS for the pilot symbol sequence
#
# This is generated by a Fibonacci LFSR with polynomial x^5 + x^2 + 1
# and initial register value set to all ones
pilot_prbs = [1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1,
              0, 1, 1, 1, 0, 1, 1, 0, 0, 0]

# Defines the rate at which pilot symbols appear
# The first of every tdm_rate symbols is a pilot symbol
tdm_rate = 50

# DVB-S2 32APSK constellation definition
#
# These define the radii of the circles in the 32APSK constellation
gamma1 = 2.53
gamma2 = 4.3
# This is used for power normalization
power_32apsk = (1/gamma2**2 + 3*gamma1**2/gamma2**2 + 4)/8
# Constellation symbols
symbols_32apsk = np.concatenate((
    np.exp(1j*np.pi/8*np.arange(16)),  # outer 16PSK
    gamma1/gamma2 * np.exp(1j*(np.pi/6*np.arange(12) + np.pi/12)),  # mid 12PSK
    1/gamma2 * np.exp(1j*(np.pi/2*np.arange(4) + np.pi/4))  # inner 4PSK
    )) / np.sqrt(power_32apsk)
# Symbol mapping according to the order of symbols given above
symbol_map_32apsk = [24, 8, 25, 9, 13, 29, 12, 28, 30, 14, 31, 15, 11,
                     27, 10, 26, 16, 0, 1, 5, 4, 20, 22, 6, 7, 3, 2,
                     18, 17, 21, 23, 19]
symbol_map_rev_32apsk = [symbol_map_32apsk.index(j)
                         for j in range(len(symbol_map_32apsk))]
# 32APSK constellation object, for data symbols
constellation_32apsk = digital.constellation_calcdist(
    symbols_32apsk, symbol_map_32apsk, 4, 1,
    digital.constellation.NO_NORMALIZATION).base()

# BPSK constellation object, for pilot symbols
constellation_bpsk = constellation_bpsk = digital.constellation_bpsk().base()

# Modem baudrate
baudrate = 2570

# Modem sample rate
samp_rate = 8000

# Modem samples per symbol
sps = samp_rate/baudrate

# Root-raised cosine excess bandwidth
rrc_alpha = 0.05
